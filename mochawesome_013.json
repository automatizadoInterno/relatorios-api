{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2025-10-08T16:51:20.559Z",
    "end": "2025-10-08T16:52:11.175Z",
    "duration": 50616,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cb57a48c-4f58-4d8f-a2d0-be17b5689898",
      "title": "",
      "fullFile": "cypress/e2e/api/002 - API Integração Clientes/004 - API Inclusão de SM REST/002.api-inclusao-SM-erros-rest.cy.js",
      "file": "cypress/e2e/api/002 - API Integração Clientes/004 - API Inclusão de SM REST/002.api-inclusao-SM-erros-rest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bfb85176-468d-48ae-bde7-a1725b2182a0",
          "title": "Integração Clientes - API Inclusão de SM REST erros",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Realizar requisição com corpo vazio",
              "fullTitle": "Integração Clientes - API Inclusão de SM REST erros Realizar requisição com corpo vazio",
              "timedOut": null,
              "duration": 2417,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return cy.api({\n  method: \"POST\",\n  url: APIclientes.InclusãoSmRest,\n  body: {}\n}).then(r => {\n  expect(r.body.sucesso).to.be.null;\n  expect(r.body.erros).to.include(\"Dados incorretos\");\n});",
              "err": {},
              "uuid": "36a99d54-5a1a-4465-95ef-6078e09d3e30",
              "parentUUID": "bfb85176-468d-48ae-bde7-a1725b2182a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Realizar requisição com Token inválido",
              "fullTitle": "Integração Clientes - API Inclusão de SM REST erros Realizar requisição com Token inválido",
              "timedOut": null,
              "duration": 2410,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requisicaoPadrao({\n  token: \"123\"\n}).then(r => {\n  expect(r.body.sucesso).to.be.null;\n  expect(r.body.erros).to.include(\"O token informado não confere com o cnpj do cliente\");\n});",
              "err": {},
              "uuid": "2379d35e-7067-411f-9ecc-fcd2e87f1c59",
              "parentUUID": "bfb85176-468d-48ae-bde7-a1725b2182a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Realizar requisição com CNPJ inválido",
              "fullTitle": "Integração Clientes - API Inclusão de SM REST erros Realizar requisição com CNPJ inválido",
              "timedOut": null,
              "duration": 2228,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requisicaoPadrao({\n  cnpj: \"123\"\n}).then(r => {\n  expect(r.body.sucesso).to.be.null;\n  expect(r.body.erros).to.include(\"O token informado não confere com o cnpj do cliente\");\n});",
              "err": {},
              "uuid": "eb232f40-41d7-4886-a376-9297c12e0ece",
              "parentUUID": "bfb85176-468d-48ae-bde7-a1725b2182a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Realizar requisição com a previsão de início sendo uma data no passado.",
              "fullTitle": "Integração Clientes - API Inclusão de SM REST erros Realizar requisição com a previsão de início sendo uma data no passado.",
              "timedOut": null,
              "duration": 37263,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requisicaoPadrao({\n  prevInicio: \"03/01/2025 15:50:00\"\n}).then(r => {\n  expect(r.body.sucesso).to.be.null;\n  expect(r.body.erros).to.include(\"Previsão de início não deve ser menor que a data e hora atual;\\nA diferença entre a previsão de início e de fim não pode ultrapassar 120 dias\");\n});",
              "err": {},
              "uuid": "fb59224c-2680-458c-9dc0-f6bf4c31af8f",
              "parentUUID": "bfb85176-468d-48ae-bde7-a1725b2182a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Realizar requsição com a previsão de chegada sendo uma data no passado.",
              "fullTitle": "Integração Clientes - API Inclusão de SM REST erros Realizar requsição com a previsão de chegada sendo uma data no passado.",
              "timedOut": null,
              "duration": 5600,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requisicaoPadrao({\n  prevChegada: \"03/01/2025 15:50:00\"\n}).then(r => {\n  expect(r.body.sucesso).to.be.null;\n  expect(r.body.erros).to.include(\"Data de previsão menor que a data de inicio\");\n});",
              "err": {},
              "uuid": "e81e3367-c57a-44fe-be16-f09b0c590914",
              "parentUUID": "bfb85176-468d-48ae-bde7-a1725b2182a0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "36a99d54-5a1a-4465-95ef-6078e09d3e30",
            "2379d35e-7067-411f-9ecc-fcd2e87f1c59",
            "eb232f40-41d7-4886-a376-9297c12e0ece",
            "fb59224c-2680-458c-9dc0-f6bf4c31af8f",
            "e81e3367-c57a-44fe-be16-f09b0c590914"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 49918,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.3.0"
    }
  }
}